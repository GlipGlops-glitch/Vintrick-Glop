{
  "POST:/purchase-orders": {
    "version": "v7",
    "http_method": "POST",
    "path": "/purchase-orders",
    "description": "Create or update a purchase order with lines in the system",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": "PurchaseOrder",
    "response_schema": "PurchaseOrderSuccessResponse"
  },
  "GET:/purchase-orders/<id>": {
    "version": "v7",
    "http_method": "GET",
    "path": "/purchase-orders/{id}",
    "description": "Get the details of a purchase order.",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "description": "The unique identifier of this resource. It is generated by vintrace internally",
        "examples": {
          "vintrace-generated-id": {
            "value": 1232342
          }
        }
      },
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": null,
    "response_schema": "PurchaseOrderSuccessResponse"
  },
  "GET:/business-unit-transactions": {
    "version": "v7",
    "http_method": "GET",
    "path": "/business-unit-transactions",
    "description": "Return bulk wine cost movements between two dates",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifer associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "example": 10
        },
        "description": "Sets limit for maximum number of results in a paginated response"
      },
      {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "example": 0
        },
        "description": "Sets offset for the results in a paginated response"
      },
      {
        "name": "startDate",
        "in": "query",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64",
          "example": 1667192283000
        },
        "description": "The start date/time you are querying for transactions from"
      },
      {
        "name": "endDate",
        "in": "query",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64",
          "example": 1667192283000
        },
        "description": "The end date/time you are querying for transactions until"
      },
      {
        "name": "businessUnit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "US57"
        },
        "description": "The unique business unit for the winery you want to filter on"
      },
      {
        "name": "wineryName",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "Z Winery"
        },
        "description": "The unique name of the winery you want to filter on"
      },
      {
        "name": "wineryId",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "example": 7177
        },
        "description": "The id of the winery you want to filter on"
      }
    ],
    "request_schema": null,
    "response_schema": "GetBusinessUnitTransactionsResponse"
  },
  "POST:/blocks": {
    "version": "v7",
    "http_method": "POST",
    "path": "/blocks",
    "description": "Upsert the block data into system",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": "Block",
    "response_schema": "BlockResponse"
  },
  "GET:/blocks": {
    "version": "v7",
    "http_method": "GET",
    "path": "/blocks",
    "description": "Get all blocks in the system.",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 200,
          "example": 10
        },
        "description": "Sets limit for maximum number of results in a paginated response"
      },
      {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "example": 0
        },
        "description": "Sets offset for the results in a paginated response"
      },
      {
        "name": "id",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "1,2,3"
        },
        "description": "A comma separated list of vintrace internally generated unique identifiers for this resource"
      },
      {
        "name": "include",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "fruitPlacements"
        },
        "description": "API consumer can use this query param to request including the fruitPlacements fields for the resources.\nThis must be done in combination with the vintage query param.\n\nInvalid field names will be ignored.\n"
      },
      {
        "name": "vintage",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": 2024
        },
        "description": "API consumer can use this query param to request including the fruitPlacements fields for the resources.\nThis must be done in combination with the fruitPlacements query param.\n\nInvalid field names will be ignored.\n"
      }
    ],
    "request_schema": null,
    "response_schema": "GetBlocksSuccessResponse"
  },
  "POST:/blocks/<blockId>/assessments": {
    "version": "v7",
    "http_method": "POST",
    "path": "/blocks/{blockId}/assessments",
    "description": "Upsert the assessment data for the block",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "blockId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The unique identifier of this block. It accepts the id generated by vintrace or external id stored in vintrace",
        "examples": {
          "vintrace-generated-id": {
            "value": 1232342
          },
          "external-id": {
            "value": "ext:ABC32423"
          }
        }
      }
    ],
    "request_schema": "BlockAssessment",
    "response_schema": "BlockAssessmentResponse"
  },
  "PATCH:/blocks/<blockId>": {
    "version": "v7",
    "http_method": "PATCH",
    "path": "/blocks/{blockId}",
    "description": "Partially update some fields in the block record",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "blockId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The unique identifier of this block. It accepts the id generated by vintrace or external id stored in vintrace",
        "examples": {
          "vintrace-generated-id": {
            "value": 1232342
          },
          "external-id": {
            "value": "ext:ABC32423"
          }
        }
      }
    ],
    "request_schema": "Common-schemas_PatchRequest",
    "response_schema": null
  },
  "GET:/assessments": {
    "version": "v7",
    "http_method": "GET",
    "path": "/assessments",
    "description": "Get all the block assessments in the system.",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 200,
          "example": 10
        },
        "description": "Sets limit for maximum number of results in a paginated response"
      },
      {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "example": 0
        },
        "description": "Sets offset for the results in a paginated response"
      },
      {
        "name": "assessedBy",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "examples": {
          "particular-user-id": {
            "value": "eq:2342"
          },
          "particular-user-ext-id": {
            "value": "eq:ext:api-user23234"
          },
          "exclude-user-id": {
            "value": "ne:12312"
          }
        },
        "description": "Filter assessments based on the users who has made the assessments. \n\nThe value after the colon is the id, or external id (must be prefixed with ext:) of this user in Vintrace. \n\nSupports equal to (eq) and non equal to (ne) operations.\n"
      },
      {
        "name": "createdSince",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "examples": {
          "date": {
            "value": 1644644421000
          }
        },
        "description": "Filter the records createdAt must be greater than createdSinceParameter."
      },
      {
        "name": "createdBefore",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "examples": {
          "date": {
            "value": 1644644421000
          }
        },
        "description": "Filter the records createdAt must be less than createdSinceParameter."
      },
      {
        "name": "extraFields",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "cropInspected,comments,locationDetails"
        },
        "description": "API consumer can use this query param to request including extra fields for the resources.\n\nFor field names, refer to the schema of BlockAssessment object.\n\nInvalid field names will be ignored.\n"
      }
    ],
    "request_schema": null,
    "response_schema": "GetAssessmentsResponse"
  },
  "POST:/vineyards": {
    "version": "v7",
    "http_method": "POST",
    "path": "/vineyards",
    "description": "Upsert the vineyard data",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": "Vineyard",
    "response_schema": "VineyardResponse"
  },
  "POST:/maturity-samples": {
    "version": "v7",
    "http_method": "POST",
    "path": "/maturity-samples",
    "description": "Create a maturity sample in system",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": "MaturitySample",
    "response_schema": "MaturitySampleResponse"
  },
  "GET:/parties": {
    "version": "v7",
    "http_method": "GET",
    "path": "/parties",
    "description": "Search parties in vintrace",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "governmentNumbers",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "92032-232,92032-231"
        },
        "description": "Only include parties that have these government numbers. Support multiple values delimited by comma."
      },
      {
        "name": "roles",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "grower,carrier"
        },
        "description": "Only include parties that have these roles. Support multiple values delimited by comma."
      }
    ],
    "request_schema": null,
    "response_schema": "GetPartiesSuccessResponse"
  },
  "POST:/parties": {
    "version": "v7",
    "http_method": "POST",
    "path": "/parties",
    "description": "Upsert a party into vintrace.",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": "Party",
    "response_schema": "UpsertPartySuccessResponse"
  },
  "GET:/shipments": {
    "version": "v7",
    "http_method": "GET",
    "path": "/shipments",
    "description": "Get all shipments in the system",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 200,
          "default": 10,
          "example": 10
        },
        "description": "Sets limit for maximum number of results in a paginated response"
      },
      {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "example": 0,
          "default": 0
        },
        "description": "Sets offset for the results in a paginated response"
      },
      {
        "name": "modifiedSince",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int64",
          "example": 1650431615057
        },
        "description": "Only return records that are modified after the suppplied time"
      },
      {
        "name": "modifiedBefore",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "format": "int64",
          "example": 164876283628
        },
        "description": "Only return records that are modified before the supplied time."
      },
      {
        "name": "type",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "BULK"
        },
        "description": "Filter the shipments by the operation type."
      },
      {
        "name": "dispatchType",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "Bottling,Bulk Sale"
        },
        "description": "Filter the shipments by the dispatch type. \n\nNote, the comma is used as delimiter in this param and will conflict if the name dispatch type entity in Vintrace has a comma.\n"
      },
      {
        "name": "freightCode",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "FC1,FC2"
        },
        "description": "Filter the shipments by the name of freight code entity.\n\nNote, the comma is used as delimiter in this param and will conflict if the name has a comma.\n"
      },
      {
        "name": "include",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "allocations,metrics,cost"
        },
        "description": "By default, allocations, metrics and cost won't be included in the wine details unless requested using this query param"
      }
    ],
    "request_schema": null,
    "response_schema": "GetShipmentsSuccessResponse"
  },
  "GET:/barrel-treatments": {
    "version": "v7",
    "http_method": "GET",
    "path": "/barrel-treatments",
    "description": "Get barrel move shipments",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 200,
          "default": 10,
          "example": 10
        },
        "description": "Sets limit for maximum number of results in a paginated response"
      },
      {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "example": 0,
          "default": 0
        },
        "description": "Sets offset for the results in a paginated response"
      },
      {
        "name": "modifiedSince",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int64",
          "example": 1650431615057
        },
        "description": "Only return records that are modified after the suppplied time"
      },
      {
        "name": "modifiedBefore",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "format": "int64",
          "example": 164876283628
        },
        "description": "Only return records that are modified before the supplied time."
      },
      {
        "name": "treatment",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "Barrel Check,Move barrel 1"
        },
        "description": "Filter the barrel treatment by the name of treatment type. Case sensitive.\n\nNote, comma is used as delimiter in this param and will conflict if the name has a comma.\n"
      }
    ],
    "request_schema": null,
    "response_schema": "GetBarrelTreatmentsSuccessResponse"
  },
  "POST:/bookings": {
    "version": "v7",
    "http_method": "POST",
    "path": "/bookings",
    "description": "Upsert this booking into vintrace.",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": "Booking",
    "response_schema": "CreateBookingSuccessResponse"
  },
  "POST:/bookings/<bookingId>/deactivation": {
    "version": "v7",
    "http_method": "POST",
    "path": "/bookings/{bookingId}/deactivation",
    "description": "Deactivate this booking record",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "bookingId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The unique identifier of this booking. It accepts the id generated by vintrace or the unique booking number stored in the record",
        "examples": {
          "vintrace-generated-id": {
            "value": "1232342"
          },
          "external-id": {
            "value": "ext:ABC32423"
          }
        }
      }
    ],
    "request_schema": null,
    "response_schema": "BookingDeactivationResponse"
  },
  "POST:/fruit-intakes": {
    "version": "v7",
    "http_method": "POST",
    "path": "/fruit-intakes",
    "description": "Record a new fruit intake transaction",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": "FruitIntakeRequest",
    "response_schema": "CreateFruitIntakeSuccessResponse"
  },
  "PUT:/fruit-intakes/<fruitIntakeId>/pricing": {
    "version": "v7",
    "http_method": "PUT",
    "path": "/fruit-intakes/{fruitIntakeId}/pricing",
    "description": "Update the pricing related data for this fruit intake record",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "fruitIntakeId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The unique identifier of this fruit intake. It accepts the id generated by vintrace or the external weigh tag provided by external party.",
        "examples": {
          "vintrace-generated-id": {
            "value": "1232342"
          },
          "external-id": {
            "value": "ext:TE-123-21"
          }
        }
      }
    ],
    "request_schema": "UpdateFruitIntakePricing",
    "response_schema": "UpdateFruitIntakePricingResponse"
  },
  "PUT:/fruit-intakes/<fruitIntakeId>/metrics": {
    "version": "v7",
    "http_method": "PUT",
    "path": "/fruit-intakes/{fruitIntakeId}/metrics",
    "description": "Update the metrics for this fruit intake record",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "fruitIntakeId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The unique identifier of this fruit intake. It accepts the id generated by vintrace or the external weigh tag provided by external party.",
        "examples": {
          "vintrace-generated-id": {
            "value": "1232342"
          },
          "external-id": {
            "value": "ext:TE-123-21"
          }
        }
      }
    ],
    "request_schema": "UpdateMetrics",
    "response_schema": "UpdateMetricsResponse"
  },
  "POST:/bulk-intakes": {
    "version": "v7",
    "http_method": "POST",
    "path": "/bulk-intakes",
    "description": "Create a new bulk intake",
    "parameters": [],
    "request_schema": "BulkIntakeRequest",
    "response_schema": "CreateBulkIntakeSuccessResponse"
  },
  "GET:/bulk-intakes": {
    "version": "v7",
    "http_method": "GET",
    "path": "/bulk-intakes",
    "description": "Get the bulk intake records in the system",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 200,
          "default": 10,
          "example": 10
        },
        "description": "Sets limit for maximum number of results in a paginated response"
      },
      {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "example": 0,
          "default": 0
        },
        "description": "Sets offset for the results in a paginated response"
      },
      {
        "name": "modifiedSince",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int64",
          "example": 1650431615057
        },
        "description": "Only return records that are modified after the suppplied time"
      },
      {
        "name": "modifiedBefore",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "format": "int64",
          "example": 164876283628
        },
        "description": "Only return records that are modified before the supplied time."
      },
      {
        "name": "purchaseReference",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Filter the search result by purchase reference. Support equal operation",
        "examples": {
          "equalTo": {
            "value": "eq:29320342"
          }
        }
      }
    ],
    "request_schema": null,
    "response_schema": "GetBulkIntakesSuccessResponse"
  },
  "PATCH:/bulk-intakes/<id>": {
    "version": "v7",
    "http_method": "PATCH",
    "path": "/bulk-intakes/{id}",
    "description": "Partially update some fields in the bulk intake record",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "description": "The unique identifier of this resource. It is generated by vintrace internally",
        "examples": {
          "vintrace-generated-id": {
            "value": 1232342
          }
        }
      }
    ],
    "request_schema": "Common-schemas_PatchRequest",
    "response_schema": null
  },
  "GET:/trial-blends": {
    "version": "v7",
    "http_method": "GET",
    "path": "/trial-blends",
    "description": "Get the trial blend records in the system",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 200,
          "default": 10,
          "example": 10
        },
        "description": "Sets limit for maximum number of results in a paginated response"
      },
      {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "example": 0,
          "default": 0
        },
        "description": "Sets offset for the results in a paginated response"
      },
      {
        "name": "modifiedSince",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int64",
          "example": 1650431615057
        },
        "description": "Only return records that are modified after the suppplied time"
      },
      {
        "name": "modifiedBefore",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "format": "int64",
          "example": 164876283628
        },
        "description": "Only return records that are modified before the supplied time."
      },
      {
        "name": "status",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Filter the search result by status. Support multiple status in the value delimited by comma.\n\nFor complete list of values, refer to the enums of status field in TrialBlend schema.\n",
        "examples": {
          "filterByOneStatus": {
            "value": "REQUEST_FOR_APPROVAL"
          },
          "filterByTwoStatus": {
            "value": "REQUEST_FOR_APPROVAL,DRAFT"
          }
        }
      },
      {
        "name": "compositionSummaryBy",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Provide a summarised composition view based on the types provided in the query param. \n\nThis query param support multiple types delimited by comma. Currently, you can summarize by variety,vintage,region,subRegion\n",
        "example": "variety,vintage,region,sub_region"
      }
    ],
    "request_schema": null,
    "response_schema": "GetTrialBlendsSuccessResponse"
  },
  "GET:/work-orders": {
    "version": "v7",
    "http_method": "GET",
    "path": "/work-orders",
    "description": "Get all the work orders in the system",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "example": 0,
          "default": 0
        },
        "description": "Sets offset for the results in a paginated response"
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 200,
          "default": 10,
          "example": 10
        },
        "description": "Sets limit for maximum number of results in a paginated response"
      },
      {
        "name": "scheduledSince",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int64",
          "example": 164876284000
        },
        "description": "Only include work orders that are scheduled since the provided time stamp. The value is required to be in epoch milliseconds and inclusive."
      },
      {
        "name": "scheduledBefore",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int64",
          "example": 164876284000
        },
        "description": "Only include work orders that are scheduled before the provided time stamp. The value is required to be in epoch milliseconds and inclusive."
      },
      {
        "name": "status",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "READY,IN_PROGRESS"
        },
        "description": "Only include work orders that are in the provided status list.\n\nSupport multiple types delimited by comma.\n"
      },
      {
        "name": "operationTypes",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "TIRAGE,BULK_DISPATCH"
        },
        "description": "Only include work orders that have the type of winery jobs in the provided list.\n\nSupport multiple types delimited by comma.\n"
      }
    ],
    "request_schema": null,
    "response_schema": "GetWorkOrdersSuccessResponse"
  },
  "GET:/tirage/<operationId>": {
    "version": "v7",
    "http_method": "GET",
    "path": "/tirage/{operationId}",
    "description": "Get a tirage operation information in the system",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "operationId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The unique identifier for this resource. It accepts the winery process id or the associated job id if it's scheduled in the work order",
        "examples": {
          "process-id": {
            "value": "39203242"
          },
          "work-order-job-id": {
            "value": "job:12321"
          }
        }
      }
    ],
    "request_schema": null,
    "response_schema": "TirageSuccessResponse"
  },
  "PATCH:/tirage/<operationId>": {
    "version": "v7",
    "http_method": "PATCH",
    "path": "/tirage/{operationId}",
    "description": "Partially update fields in the tirage record",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "operationId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The unique identifier for this resource. It accepts the winery process id or the associated job id if it's scheduled in the work order",
        "examples": {
          "process-id": {
            "value": "39203242"
          },
          "work-order-job-id": {
            "value": "job:12321"
          }
        }
      }
    ],
    "request_schema": "Common-schemas_PatchRequest",
    "response_schema": null
  },
  "POST:/barrels-movements": {
    "version": "v7",
    "http_method": "POST",
    "path": "/barrels-movements",
    "description": "move barrels",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": "MoveBarrelsRequest",
    "response_schema": "MoveBarrelsResponse"
  },
  "GET:/wine-batches": {
    "version": "v7",
    "http_method": "GET",
    "path": "/wine-batches",
    "description": "Get a list of wine batches in the system",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 200,
          "default": 10,
          "example": 10
        },
        "description": "Sets limit for maximum number of results in a paginated response"
      },
      {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "example": 0,
          "default": 0
        },
        "description": "Sets offset for the results in a paginated response"
      },
      {
        "name": "id",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "1,2,3"
        },
        "description": "A comma separated list of vintrace internally generated unique identifiers for this resource"
      },
      {
        "name": "include",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "allocations,vessels"
        },
        "description": "By default, allocations and vessels won't be included in the response unless requested using this query param"
      }
    ],
    "request_schema": null,
    "response_schema": "GetWineBatchSuccessResponse"
  },
  "POST:/wine-batches": {
    "version": "v7",
    "http_method": "POST",
    "path": "/wine-batches",
    "description": "Create a wine batch",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": "CreateWineBatchRequest",
    "response_schema": "CreateWineBatchSuccessResponse"
  },
  "PUT:/operation/documents": {
    "version": "v7",
    "http_method": "PUT",
    "path": "/operation/documents",
    "description": "Upload a file to an operation",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": "AttachDocumentsRequest",
    "response_schema": "AttachDocumentsSuccessResponse"
  },
  "GET:/vessel-details-report": {
    "version": "v7",
    "http_method": "GET",
    "path": "/vessel-details-report",
    "description": "Return vessel and contents details for bulk wines at a specified date/time",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifer associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "example": 10
        },
        "description": "Sets limit for maximum number of results in a paginated response"
      },
      {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "example": 0
        },
        "description": "Sets offset for the results in a paginated response"
      },
      {
        "name": "asAtDate",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int64",
          "example": 1650431615057
        },
        "description": "The date/time you want to run the report for (defaults to the current date/time))"
      },
      {
        "name": "businessUnit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "US57"
        },
        "description": "The business unit for the winery you want to filter on"
      },
      {
        "name": "batch",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "21NPVPINOT"
        },
        "description": "Filter results to just show details for this wine batch"
      },
      {
        "name": "vessel",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "T25-01"
        },
        "description": "Filter results to just show details for this vessel"
      },
      {
        "name": "owner",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Filter results to just who details for this owner",
        "examples": {
          "vintrace-generated-id": {
            "value": "1232342"
          },
          "external-id": {
            "value": "ext:ABC32423"
          }
        }
      },
      {
        "name": "extraFields",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "composition,livemetrics,allocations"
        },
        "description": "This fields enable user to view composition, live mertics and allocation in the response."
      }
    ],
    "request_schema": null,
    "response_schema": "GetBulkWineDetailsReportResponse"
  },
  "POST:/receivals": {
    "version": "v7",
    "http_method": "POST",
    "path": "/receivals",
    "description": "Perform a receive stock operation in the system.",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": "ReceiveStockActionSchema",
    "response_schema": "ReceiveStockActionResponse"
  },
  "GET:/dispatches": {
    "version": "v7",
    "http_method": "GET",
    "path": "/dispatches",
    "description": "Get all stock dispatches",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 200,
          "default": 10,
          "example": 10
        },
        "description": "Sets limit for maximum number of results in a paginated response"
      },
      {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "example": 0,
          "default": 0
        },
        "description": "Sets offset for the results in a paginated response"
      }
    ],
    "request_schema": null,
    "response_schema": "GetStockDispatchesSuccessResponse"
  },
  "GET:/barrels/<id>": {
    "version": "v7",
    "http_method": "GET",
    "path": "/barrels/{id}",
    "description": "Get the details of a barrel",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": null,
    "response_schema": "BarrelSuccessResponse"
  },
  "GET:/barrel-groups/<id>": {
    "version": "v7",
    "http_method": "GET",
    "path": "/barrel-groups/{id}",
    "description": "Get the details of a barrel group",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": null,
    "response_schema": "BarrelGroupSuccessResponse"
  },
  "POST:/tanks": {
    "version": "v7",
    "http_method": "POST",
    "path": "/tanks",
    "description": "create a tank",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": "TankCreateRequest",
    "response_schema": "TankSuccessResponse"
  },
  "GET:/tanks/<id>": {
    "version": "v7",
    "http_method": "GET",
    "path": "/tanks/{id}",
    "description": "Get the details of a tank",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": null,
    "response_schema": "TankSuccessResponse"
  },
  "GET:/tankers/<id>": {
    "version": "v7",
    "http_method": "GET",
    "path": "/tankers/{id}",
    "description": "Get the details of a tanker",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": null,
    "response_schema": "TankerSuccessResponse"
  },
  "GET:/bins/<id>": {
    "version": "v7",
    "http_method": "GET",
    "path": "/bins/{id}",
    "description": "Get the details of a bin",
    "parameters": [
      {
        "name": "correlation-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Optional unique identifier associated with the transaction",
        "example": "d308faac-66e1-47df-a9ff-fbe61b4e8974"
      }
    ],
    "request_schema": null,
    "response_schema": "BinSuccessResponse"
  },
  "GET:/workorders/list": {
    "version": "v6",
    "http_method": "GET",
    "path": "/workorders/list/",
    "description": "List available work orders",
    "parameters": [
      {
        "name": "max",
        "in": "query",
        "description": "The starting index of results.",
        "example": "30",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "first",
        "in": "query",
        "description": "The starting index of results.",
        "example": "10",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "startsWith",
        "in": "query",
        "description": "String that matches the QuickSearchResult against the start of the name.",
        "example": "TWL2",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "assignedTo",
        "in": "query",
        "description": "A high-level filter to the work order assignedTo field, from the operator's perspective. Possible values are AVAILABLE_TO_ME, ANYONE, MINE_ONLY, UNASSIGNED. Default value is AVAILABLE_TO_ME.",
        "example": "ANYONE",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "workOrderState",
        "in": "query",
        "description": "A high-level filter for the work order status, from the operator's perspective. Possible values are ANY, IN_PROGRESS, NOT_STARTED, SUBMITTED, INCOMPLETE. Default value is ANY.",
        "example": "INCOMPLETE",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "fromDate",
        "in": "query",
        "description": "Format in YYYY-MM-DD format. Search for work orders with a scheduled date on or after this date. Default value is 7 days ago.",
        "example": "2017-10-1",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "toDate",
        "in": "query",
        "description": "in YYYY-MM-DD format. Search for work orders with a scheduled date on or before this date. Default value is 3 days from now.",
        "example": "2017-10-30",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "countOnly",
        "in": "query",
        "description": "Returns the number of results only.",
        "example": "true",
        "schema": {
          "type": "boolean"
        }
      },
      {
        "name": "wineryId",
        "in": "query",
        "description": "Winery id to filter on for work orders",
        "example": "4",
        "schema": {
          "type": "integer"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "WorkOrderSearchResponse"
  },
  "GET:/workorders/<id>": {
    "version": "v6",
    "http_method": "GET",
    "path": "/workorders/{id}",
    "description": "Get work order details by id or code",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "The ID of the work order.",
        "example": "25",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "code",
        "in": "query",
        "description": "The TWL number of the work order.",
        "example": "TWL2827",
        "schema": {
          "type": "string"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "WorkOrder"
  },
  "POST:/workorders/assign": {
    "version": "v6",
    "http_method": "POST",
    "path": "/workorders/assign",
    "description": "Assign a work order",
    "parameters": [],
    "request_schema": "AssignWorkData",
    "response_schema": "AssignWorkResponse"
  },
  "GET:/workorders/jobs/<jobId>": {
    "version": "v6",
    "http_method": "GET",
    "path": "/workorders/jobs/{jobId}",
    "description": "Get job details by id",
    "parameters": [
      {
        "name": "jobId",
        "in": "path",
        "description": "The ID of the job.",
        "required": true,
        "example": "15480",
        "schema": {
          "type": "string"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "Job"
  },
  "POST:/workorders/jobs/submit": {
    "version": "v6",
    "http_method": "POST",
    "path": "/workorders/jobs/submit",
    "description": "Submit job details",
    "parameters": [],
    "request_schema": "SubmitJobRequest",
    "response_schema": "SubmitWorkOrderStepsResponse"
  },
  "GET:/sales-order/list": {
    "version": "v6",
    "http_method": "GET",
    "path": "/sales-order/list/",
    "description": "List available sales orders",
    "parameters": [
      {
        "name": "max",
        "in": "query",
        "description": "The starting index of results.",
        "example": "30",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "first",
        "in": "query",
        "description": "The starting index of results.",
        "example": "10",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "startsWith",
        "in": "query",
        "description": "String that matches the QuickSearchResult against the start of the name.",
        "example": "VSO",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "status",
        "in": "query",
        "description": "Status of the sales order: New, Approved, Payment in Progress, Paid.",
        "example": "Approved",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "customerName",
        "in": "query",
        "description": "Customer on the sales order.",
        "example": "Adobe Creek Warehouse`",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "startDate",
        "in": "query",
        "description": "Start date to filter out the results of the sales orders in YYYY-MM-DD format.",
        "example": "2017-04-01",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "endDate",
        "in": "query",
        "description": "End date to filter out the results of the sales orders in YYYY-MM-DD format.",
        "example": "2017-04-30",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "invStartDate",
        "in": "query",
        "description": "The starting invoiced date to filter out sales order results in YYYY-MM-DD format.",
        "example": "2017-04-01",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "invEndDate",
        "in": "query",
        "description": "The ending invoiced date to filter out sales order results in YYYY-MM-DD format.",
        "example": "2017-04-30",
        "schema": {
          "type": "string"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "SalesOrderResponse"
  },
  "GET:/sales-order/<id>": {
    "version": "v6",
    "http_method": "GET",
    "path": "/sales-order/{id}",
    "description": "Get sales order details by id",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "The ID of the sales order.",
        "required": true,
        "example": "22",
        "schema": {
          "type": "string"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "SalesOrder"
  },
  "GET:/sales-order": {
    "version": "v6",
    "http_method": "GET",
    "path": "/sales-order/",
    "description": "Get sales order details by code",
    "parameters": [
      {
        "name": "code",
        "in": "query",
        "description": "The sales order number.",
        "example": "VSO20",
        "schema": {
          "type": "string"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "SalesOrder"
  },
  "POST:/sales-order": {
    "version": "v6",
    "http_method": "POST",
    "path": "/sales-order",
    "description": "Create or update a sales order",
    "parameters": [],
    "request_schema": "SalesOrder",
    "response_schema": "SalesOrderUpdateResponse"
  },
  "GET:/refund/list": {
    "version": "v6",
    "http_method": "GET",
    "path": "/refund/list/",
    "description": "List available refunds",
    "parameters": [
      {
        "name": "max",
        "in": "query",
        "description": "The starting index of results.",
        "example": "30",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "first",
        "in": "query",
        "description": "The starting index of results.",
        "example": "10",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "startsWith",
        "in": "query",
        "description": "String that matches the QuickSearchResult against the start of the name.",
        "example": "VCR10",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "status",
        "in": "query",
        "description": "Status of the sales order: Awaiting approval, Approved.",
        "example": "Approved",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "customerName",
        "in": "query",
        "description": "Customer on the sales order.",
        "example": "Adobe Creek Warehouse`",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "startDate",
        "in": "query",
        "description": "Start date to filter out the results of the sales orders in YYYY-MM-DD format.",
        "example": "2017-04-01",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "endDate",
        "in": "query",
        "description": "End date to filter out the results of the sales orders in YYYY-MM-DD format.",
        "example": "2017-04-30",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "salesOrderName",
        "in": "query",
        "description": "String that matches the sales order code of the refund.",
        "example": "VSO21",
        "schema": {
          "type": "string"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "RefundResponse"
  },
  "GET:/refund/<id>": {
    "version": "v6",
    "http_method": "GET",
    "path": "/refund/{id}",
    "description": "Get refund details by id",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "The ID of the refund.",
        "example": "75",
        "schema": {
          "type": "string"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "Refund"
  },
  "GET:/refund": {
    "version": "v6",
    "http_method": "GET",
    "path": "/refund/",
    "description": "Get refund details by code",
    "parameters": [
      {
        "name": "code",
        "in": "query",
        "description": "The refund name.",
        "example": "VS205",
        "schema": {
          "type": "string"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "Refund"
  },
  "POST:/refund": {
    "version": "v6",
    "http_method": "POST",
    "path": "/refund",
    "description": "Create or update a refund",
    "parameters": [],
    "request_schema": "Refund",
    "response_schema": "RefundUpdateResponse"
  },
  "GET:/party/list": {
    "version": "v6",
    "http_method": "GET",
    "path": "/party/list/",
    "description": "List parties",
    "parameters": [
      {
        "name": "max",
        "in": "query",
        "description": "The starting index of results. Default: 100.",
        "example": "30",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "first",
        "in": "query",
        "description": "The starting index of results.",
        "example": "10",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "startsWith",
        "in": "query",
        "description": "String that matches the primeName (Surname field in vintrace for individuals, Company Name for organisations) with the given string against the start of the name.",
        "example": "ABC Wine Company",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "category",
        "in": "query",
        "description": "Category of the party: All, Individuals, Organisations.",
        "example": "All",
        "schema": {
          "type": "string"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "PartyResponse"
  },
  "GET:/party/<id>": {
    "version": "v6",
    "http_method": "GET",
    "path": "/party/{id}",
    "description": "Get party details by id",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "The ID of the party.",
        "example": "18",
        "schema": {
          "type": "string"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "Party"
  },
  "GET:/party": {
    "version": "v6",
    "http_method": "GET",
    "path": "/party/",
    "description": "Get party details by name",
    "parameters": [
      {
        "name": "name",
        "in": "query",
        "description": "The primeName (surname) if the party is an individual or the primeName (company name) if the party is an organisation.",
        "example": "Smith",
        "schema": {
          "type": "string"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "Party"
  },
  "POST:/party": {
    "version": "v6",
    "http_method": "POST",
    "path": "/party",
    "description": "Create or update a party",
    "parameters": [],
    "request_schema": "Party",
    "response_schema": "PartyUpdateResponse"
  },
  "GET:/products/list": {
    "version": "v6",
    "http_method": "GET",
    "path": "/products/list",
    "description": "List available products",
    "parameters": [
      {
        "name": "barcode",
        "in": "query",
        "description": "Can either be the vessel code or the asset ID.",
        "example": "BX54",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "max",
        "in": "query",
        "description": "The starting index of results. Default: 100.",
        "example": "30",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "first",
        "in": "query",
        "description": "The starting index of results.",
        "example": "10",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "skipMetrics",
        "in": "query",
        "description": "False by default,if true will not include the metric data in the results.",
        "example": "true",
        "schema": {
          "type": "boolean"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "ProductListResponse"
  },
  "POST:/product-update": {
    "version": "v6",
    "http_method": "POST",
    "path": "/product-update",
    "description": "Update a product",
    "parameters": [],
    "request_schema": "ProductUpdateData",
    "response_schema": "ProductUpdateResponse"
  },
  "GET:/transaction/search": {
    "version": "v6",
    "http_method": "GET",
    "path": "/transaction/search/",
    "description": "Transaction search",
    "parameters": [
      {
        "name": "dateFrom",
        "in": "query",
        "description": "Format in YYYY-MM-DD format. Defaults to current date if not provided. Search for operations completed on or after this date.",
        "example": "2017-07-18",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "dateTo",
        "in": "query",
        "description": "Format in YYYY-MM-DD format.  Defaults to current date if not provided. Search for operations completed on or before this date.",
        "example": "2017-08-08",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "ownerName",
        "in": "query",
        "description": "String that matches the owner name.",
        "example": "JX2 Winery",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "batchName",
        "in": "query",
        "description": "String that matches the batch name.",
        "example": "2017CH-Prog",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "wineryName",
        "in": "query",
        "description": "String that matches the winery name.",
        "example": "JX2 Winery",
        "schema": {
          "type": "string"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "TransactionSummaryResponse"
  },
  "GET:/intake-operations/search": {
    "version": "v6",
    "http_method": "GET",
    "path": "/intake-operations/search",
    "description": "Fruit intake operation search",
    "parameters": [
      {
        "name": "modifiedSince",
        "in": "query",
        "description": "Filter on records that have been added/modified/reversed since this date - represented as milliseconds since 01/01/1970 00:00:00 GMT",
        "example": "157813337000",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "operationId",
        "in": "query",
        "description": "Operation id to filter on for a specific fruit intake operation",
        "example": "492",
        "schema": {
          "type": "integer"
        }
      },
      {
        "name": "processId",
        "in": "query",
        "description": "Delivery process id to filter all intakes for a specific delivery",
        "example": "3038",
        "schema": {
          "type": "integer"
        }
      },
      {
        "name": "deliveryDocket",
        "in": "query",
        "description": "Docket/Weigh Tag number as generated by vintrace to identify a specific fruit delivery",
        "example": "407 / 1",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "intakeDocket",
        "in": "query",
        "description": "Docket/Weigh Tag number as generated by vintrace to identify a specific fruit intake",
        "example": "407 / 1",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "externalWeighTag",
        "in": "query",
        "description": "3rd party weigh tag as provided by external system to identify a specific fruit intake",
        "example": "PB-TT-1231",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "externalSystemBlocksOnly",
        "in": "query",
        "description": "Only show fruit intakes for blocks that have an external id set",
        "example": "true",
        "schema": {
          "type": "boolean"
        }
      },
      {
        "name": "externalBlockId",
        "in": "query",
        "description": "Only show fruit intakes for the block with matching externalBlockId",
        "example": "89712",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "blockId",
        "in": "query",
        "description": "Only show fruit intakes for the block with matching vintrace internal identifier",
        "example": "1",
        "schema": {
          "type": "integer"
        }
      },
      {
        "name": "blockName",
        "in": "query",
        "description": "Only show fruit intakes for the blocks with matching this name",
        "example": "CH1",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "vineyardId",
        "in": "query",
        "description": "Only show fruit intakes for the vineyard with matching vintrace internal identifier",
        "example": "1",
        "schema": {
          "type": "integer"
        }
      },
      {
        "name": "vineyardName",
        "in": "query",
        "description": "Only show fruit intakes for the vineyards matching this name",
        "example": "Eastern Vineyard",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "wineryId",
        "in": "query",
        "description": "Only show fruit intakes for the winery with matching vintrace internal identifier",
        "example": "1",
        "schema": {
          "type": "integer"
        }
      },
      {
        "name": "wineryName",
        "in": "query",
        "description": "Only show fruit intakes for the wineries matching this name",
        "example": "JX2 Winery",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "growerType",
        "in": "query",
        "description": "Only show fruit intakes for the grower type matching",
        "example": "External",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "growerId",
        "in": "query",
        "description": "Only show fruit intakes for the grower with matching vintrace internal identifier",
        "example": "3",
        "schema": {
          "type": "integer"
        }
      },
      {
        "name": "growerName",
        "in": "query",
        "description": "Only show fruit intakes for the grower matching this name",
        "example": "JX2 Winery",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "ownerId",
        "in": "query",
        "description": "Only show fruit intakes for the owner with matching vintrace internal identifier",
        "example": "2",
        "schema": {
          "type": "integer"
        }
      },
      {
        "name": "ownerName",
        "in": "query",
        "description": "Only show fruit intakes for the owner matching this name",
        "example": "JX2 Winery",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "vintage",
        "in": "query",
        "description": "Only show fruit intakes for this vintage in YYYY format",
        "example": "2020",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "recordedAfter",
        "in": "query",
        "description": "Filter on records with an effective date after this date - represented as milliseconds since 01/01/1970 00:00:00 GMT",
        "example": "157813337000",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "recordedBefore",
        "in": "query",
        "description": "Filter on records with an effective date before this date - represented as milliseconds since 01/01/1970 00:00:00 GMT",
        "example": "157813337000",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "customAdapter",
        "in": "query",
        "description": "Special adapter reference to provide customized fields in additionalDetails map.  Use as directed by vintrace",
        "example": "ZZZ",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "maxResults",
        "in": "query",
        "description": "Maximum results to fetch in a page of data",
        "example": "20",
        "schema": {
          "type": "integer"
        }
      },
      {
        "name": "firstResult",
        "in": "query",
        "description": "Skip over this many results",
        "example": "40",
        "schema": {
          "type": "integer"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "IntakeOperationSearchResponse"
  },
  "GET:/sample-operations/search": {
    "version": "v6",
    "http_method": "GET",
    "path": "/sample-operations/search",
    "description": "Maturity samples search",
    "parameters": [
      {
        "name": "modifiedSince",
        "in": "query",
        "description": "Filter on records that have been added/modified/reversed since this date - represented as milliseconds since 01/01/1970 00:00:00 GMT",
        "example": "157813337000",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "operationId",
        "in": "query",
        "description": "Operation id to filter on for a specific fruit intake operation",
        "example": "492",
        "schema": {
          "type": "integer"
        }
      },
      {
        "name": "processId",
        "in": "query",
        "description": "Delivery process id to filter all intakes for a specific delivery",
        "example": "3038",
        "schema": {
          "type": "integer"
        }
      },
      {
        "name": "externalSystemBlocksOnly",
        "in": "query",
        "description": "Only show fruit intakes for blocks that have an external id set",
        "example": "true",
        "schema": {
          "type": "boolean"
        }
      },
      {
        "name": "externalBlockId",
        "in": "query",
        "description": "Only show fruit intakes for the block with matching externalBlockId",
        "example": "89712",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "blockId",
        "in": "query",
        "description": "Only show fruit intakes for the block with matching vintrace internal identifier",
        "example": "1",
        "schema": {
          "type": "integer"
        }
      },
      {
        "name": "blockName",
        "in": "query",
        "description": "Only show fruit intakes for the blocks with matching this name",
        "example": "CH1",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "vineyardId",
        "in": "query",
        "description": "Only show fruit intakes for the vineyard with matching vintrace internal identifier",
        "example": "1",
        "schema": {
          "type": "integer"
        }
      },
      {
        "name": "vineyardName",
        "in": "query",
        "description": "Only show fruit intakes for the vineyards matching this name",
        "example": "Eastern Vineyard",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "growerId",
        "in": "query",
        "description": "Only show fruit intakes for the grower with matching vintrace internal identifier",
        "example": "3",
        "schema": {
          "type": "integer"
        }
      },
      {
        "name": "growerName",
        "in": "query",
        "description": "Only show fruit intakes for the grower matching this name",
        "example": "JX2 Winery",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "ownerId",
        "in": "query",
        "description": "Only show fruit intakes for the owner with matching vintrace internal identifier",
        "example": "2",
        "schema": {
          "type": "integer"
        }
      },
      {
        "name": "ownerName",
        "in": "query",
        "description": "Only show fruit intakes for the owner matching this name",
        "example": "JX2 Winery",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "vintage",
        "in": "query",
        "description": "Only show fruit intakes for this vintage in YYYY format",
        "example": "2020",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "recordedAfter",
        "in": "query",
        "description": "Filter on records with an effective date after this date - represented as milliseconds since 01/01/1970 00:00:00 GMT",
        "example": "157813337000",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "recordedBefore",
        "in": "query",
        "description": "Filter on records with an effective date before this date - represented as milliseconds since 01/01/1970 00:00:00 GMT",
        "example": "157813337000",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "customAdapter",
        "in": "query",
        "description": "Special adapter reference to provide customized fields in additionalDetails map.  Use as directed by vintrace",
        "example": "ZZZ",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "maxResults",
        "in": "query",
        "description": "Maximum results to fetch in a page of data",
        "example": "20",
        "schema": {
          "type": "integer"
        }
      },
      {
        "name": "firstResult",
        "in": "query",
        "description": "Skip over this many results",
        "example": "40",
        "schema": {
          "type": "integer"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "SampleOperationSearchResponse"
  },
  "POST:/block-assessments/create": {
    "version": "v6",
    "http_method": "POST",
    "path": "/block-assessments/create",
    "description": "Create a block assessment",
    "parameters": [],
    "request_schema": "FullBlockAssessmentRequest",
    "response_schema": null
  },
  "GET:/mrp/stock/<id>": {
    "version": "v6",
    "http_method": "GET",
    "path": "/mrp/stock/{id}",
    "description": "View a single stock item",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "Stock item id",
        "required": true,
        "example": "123",
        "schema": {
          "type": "number"
        }
      },
      {
        "name": "expand",
        "in": "query",
        "description": "Comma separated list of the details that you want to expand. Possible values are `fields`, `distributions`, `notes`, `historyItems`, `rawComponents`, `bulkInfo`",
        "example": "distributions,notes",
        "schema": {
          "type": "string"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "StockItem"
  },
  "GET:/mrp/stock/<id>/fields": {
    "version": "v6",
    "http_method": "GET",
    "path": "/mrp/stock/{id}/fields/",
    "description": "View list of details fields",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "Stock item id",
        "required": true,
        "example": "123",
        "schema": {
          "type": "number"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "StockFieldsDetail"
  },
  "GET:/mrp/stock/<id>/distributions": {
    "version": "v6",
    "http_method": "GET",
    "path": "/mrp/stock/{id}/distributions/",
    "description": "View distribtutions",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "Stock item id",
        "required": true,
        "example": "123",
        "schema": {
          "type": "number"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "StockDistributionDetail"
  },
  "GET:/mrp/stock/<id>/history-items": {
    "version": "v6",
    "http_method": "GET",
    "path": "/mrp/stock/{id}/history-items",
    "description": "View History items",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "Stock item id",
        "required": true,
        "example": "123",
        "schema": {
          "type": "number"
        }
      },
      {
        "name": "firstResult",
        "in": "query",
        "description": "",
        "required": true,
        "example": "0",
        "schema": {
          "type": "number"
        }
      },
      {
        "name": "maxResult",
        "in": "query",
        "description": "",
        "required": true,
        "example": "20",
        "schema": {
          "type": "number"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "StockHistoryItemsDetail"
  },
  "GET:/mrp/stock/<id>/raw-components": {
    "version": "v6",
    "http_method": "GET",
    "path": "/mrp/stock/{id}/raw-components",
    "description": "View raw components",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "",
        "required": true,
        "example": "123",
        "schema": {
          "type": "number"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "StockRawComponentsDetail"
  },
  "GET:/mrp/stock/<id>/notes": {
    "version": "v6",
    "http_method": "GET",
    "path": "/mrp/stock/{id}/notes",
    "description": "View all notes",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "firstResult",
        "in": "query",
        "description": "",
        "example": "0",
        "schema": {
          "type": "number"
        }
      },
      {
        "name": "maxResult",
        "in": "query",
        "description": "",
        "example": "20",
        "schema": {
          "type": "number"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "StockNotesDetail"
  },
  "POST:/mrp/stock/<id>/notes": {
    "version": "v6",
    "http_method": "POST",
    "path": "/mrp/stock/{id}/notes",
    "description": "Add a Note",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    ],
    "request_schema": "StockNote",
    "response_schema": null
  },
  "GET:/mrp/stock/<id>/notes/<noteId>": {
    "version": "v6",
    "http_method": "GET",
    "path": "/mrp/stock/{id}/notes/{noteId}",
    "description": "View a single Note",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "id of the note",
        "required": true,
        "example": "12",
        "schema": {
          "type": "number"
        }
      },
      {
        "name": "noteId",
        "in": "path",
        "description": "id of the note",
        "required": true,
        "example": "12",
        "schema": {
          "type": "number"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "StockNote"
  },
  "POST:/mrp/stock/<id>/notes/<noteId>/updates": {
    "version": "v6",
    "http_method": "POST",
    "path": "/mrp/stock/{id}/notes/{noteId}/updates",
    "description": "Update a Note",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "id of the note",
        "required": true,
        "example": "12",
        "schema": {
          "type": "number"
        }
      },
      {
        "name": "noteId",
        "in": "path",
        "description": "id of the note",
        "required": true,
        "example": "12",
        "schema": {
          "type": "number"
        }
      }
    ],
    "request_schema": "StockNote",
    "response_schema": null
  },
  "GET:/mrp/stock/<id>/bulk-info": {
    "version": "v6",
    "http_method": "GET",
    "path": "/mrp/stock/{id}/bulk-info",
    "description": "View bulk product details",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "",
        "required": true,
        "example": "123",
        "schema": {
          "type": "number"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "StockBulkInfoDetail"
  },
  "GET:/inventory": {
    "version": "v6",
    "http_method": "GET",
    "path": "/inventory/",
    "description": "List available stock",
    "parameters": [
      {
        "name": "max",
        "in": "query",
        "description": "The starting index of results.",
        "example": "30",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "first",
        "in": "query",
        "description": "The starting index of results.",
        "example": "10",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "date",
        "in": "query",
        "description": "The date to report stock up to, excluding stock changes done after it in YYYY-MM-DD format.",
        "example": "2017-04-01",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "stockType",
        "in": "query",
        "description": "String that matches the Stock Type of the Stock Items. Possible values are Additive, Closure, Glass/Container, Other, Wine batch, Single x1, Case x3, Case x, Case x12, Case x2, Pallet (full), Dry goods.",
        "example": "Single x1",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "ownerName",
        "in": "query",
        "description": "String that matches the Owner's name on the Stock Items.",
        "example": "ABC Wine Company",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "showEquivalentType",
        "in": "query",
        "description": "Displays the ratio of what the inventory item's volume/qty is equivalent to the given showEquivalentType Possible values 750ml bottle, 375ml bottle, 9L case (dozen), 4.5L case, Litres.",
        "example": "750ml bottle",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "breakoutCosting",
        "in": "query",
        "description": "When true, this retrieves each costing's category of costs and details each types cost. User needs \"Can view costs\" permission to view the costs.",
        "example": "true",
        "schema": {
          "type": "boolean"
        }
      },
      {
        "name": "disableCommitHeaders",
        "in": "query",
        "description": "When true, does not show an item's committed stock amount details.",
        "example": "true",
        "schema": {
          "type": "boolean"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "InventorySummaryResponse"
  },
  "GET:/search/list": {
    "version": "v6",
    "http_method": "GET",
    "path": "/search/list/",
    "description": "List results for item type",
    "parameters": [
      {
        "name": "type",
        "in": "query",
        "description": "Supported types are grading, owner, program, varietal, vintage, productState, region, block, grower, productCategory, batch, product, tank, vessel, containerEquipment, barrel, bin",
        "required": true,
        "example": "grading",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "first",
        "in": "query",
        "description": "The starting index of results.",
        "example": "10",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "startsWith",
        "in": "query",
        "description": "String that matches the search result against the start of the name.",
        "example": "RESERVE",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "exactMatch",
        "in": "query",
        "description": "If false - we do a 'like' query where 'T-50' would return 'T-50', 'T-500'. When true it only returns 'T-50'",
        "example": "false",
        "schema": {
          "type": "boolean"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "SimpleSearchResponse"
  },
  "GET:/stock/lookup": {
    "version": "v6",
    "http_method": "GET",
    "path": "/stock/lookup",
    "description": "Get stock item by code or id",
    "parameters": [
      {
        "name": "code",
        "in": "query",
        "description": "String that matches the code of the Stock Item matching against the start of the name.",
        "example": "10NVCHDEMO",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "id",
        "in": "query",
        "description": "The ID of the Stock Item.",
        "example": "37",
        "schema": {
          "type": "string"
        }
      }
    ],
    "request_schema": null,
    "response_schema": "StockItemDetails"
  }
}